
AIMED PUNCHES - kinda bad

DMG BUFF ON offensive_arc - mostly works

ENERGY ADJ? - mostly works
OVERSTRETCH MODE - hopefully not needed anymore

DAMAGE METER - mostly works


grab extrakick -mostly werks
rethink tresholds for extrakick and damage - not really

grab damage  -mostly werks

---------------


SPRITES and vfx

colors --ok

names --ok

spawning --ok

dying

controllers

----------------
fix airborne detection
counter-grab force ? different when either is flying?

rescale bounce mod

add miracle beams???

change extrakick/damage to be based only on velocity component through center?

different swing arcs for stances

hand clashes
3rd stance

no changing stance mid-throw!



better walking

better swingin


better positioning for boom vfx


--------------------- webRTC version ------------------------

JSON cancer: sometimes floats become strings after being converted and reparsed. This may or may not be for keys only.
Because of this, a bunch of times client_ui.gd uses str(id) and the like.
Also, Vector2 don't really work (as values), they get reconverted to a string, but it wasn't a big deal to replace them with two floats. 



protocol:

utf8 packets.

first letter is the code describing the message type.
the rest is either JSON (to be converted to a Godot dict), or a string to be converted to floats.

One-off:

"J" + JSON. A client has just joined the host's game, and is sending the char_data of its own character as JSON.

"H" + JSON. A client has just joined the host's game, and is the host sends him a JSON dict with info about the game and the 
            data for all characters.
            
"A" + JSON. The host sends this to all clients when "ANOTHER" client C joins, telling them to add C's character. 
            C himself should ignore this message, since he gets all info he needs from he "H" message.
            
"G" + JSON. The host sends info about the game that is starting. the first field in the JSON is "mode" and is the name of the game mode. 
            The other fields vary depending on the mode.

Every frame:
              
"P" + JSON. Host sends positions for all characters he has to all clients.
            JSON: {id1: [hand_x, hand_y, body_x, body_y, target_x, target_y] , id2: [hand_x, hand_y, body_x, body_y, target_x, target_y] , ...}
            Note that that the IDs are strings, ex. "1", "87235", ecc.
            Velocities for hand and body are also synced.
            
"I" + JSON. A client is sending its input over to the host. not really an input, more of an input state.
            JSON: an array of ints and floats.
            [ move_x(-1,0,1), move_y(-1,0,1), attack(0,1), stance(INT), target_x(FLOAT), target_y(FLOAT) ]  
                    [0]             [1]            [2]          [3]           [4]             [5]




----- plan:

move stuff in _mp_peer_connected into when reading the client's "J" packet 

make it so the "H" packet also includes info about the game ("G") and other stuff about the lobby like max players 

make it so that when reading the "H" packet, all information gets synced:
    update the params of the client's already existing own char, 
    sync gamemode/max players, 
    remove extra chars (this is not actually needed but just saying)

maybe change client-to-client "J" message, either have the host send it after reading the client-to-host "J"
    it might be fine as it is but needs some thinking 


remove "M" and just use "G" (or "H" ?) 

  ----- all done

     REDO THE SPECTATOR JAIL TP PART -- done



----- next: -------
    
    add reminder for waiting players
    
    purge useless "respawning" variable 
    
    cooler return button
    
    wins the game banner not well positioned for small screens

    also change name and color if someone has the same (ctrlF this)

    check that passing just "active_mode" in get_char_data is good

    add the "other stuff about the lobby like max players" to the "H" message (both send and receive)

    think about disabling the dragging stuff in hand.gd for chars on client

    redo lobby sealing

    input sticking for that guy

    changing mode from elim to lobby when host quits should remove the lives counter

    mind the fact that the body Sprite is now a child of the /g/ node


    scoreboards and stuff

    death VFX


    make sure collision detection works on client.
        - red names
        - yellow vfx


    ----- after: -------
    
    
    
    le big hands??

    rewrite jump height
   
    show scoreboard after game ends
    
    max players doesn't do anything yet
    

    add gameplay and maps.

    if platforms are added, add camera stabilization for platforms.

    make sure that death is always syncronized for host and clients -- prob done

    respawn timer


    confirm quit button:
        click to hold and the background gradient fills showing how long you have to hold it before it confirms, it's the kino way

    re-add controller support (for sane controllers too)

    hand position sometimes goes to NAN...... ??????????? not seen anymore but who knows

----- done: -------


    lives shouldn't be visible in lobby --done
    restarting game multiple time doesn't work -- done 


    "you win" --done
    ask for confirmation before quitting (as host) -- done

    double death -- fixed

    spectator mode camera pan -- done, BUT no smoothing
    
    joining a jobby with game started => spectator mode -- probably done
    make sure spectator mode stays synced -- hopefully????
    
    
    
    USE DRAG_AMOUNT FOR BLOCK -- no
    

    spawn pos doesn't seem to be random sometimes -- it's not randomized when joining into lobby. WONTFIX for now


    spectating controls dont work for client -- was never true
    don't respawn when disconnecting while spectating -- probs fixed
    respawning from spectator mode kills the crab once -- fixed

    spectator mode doesn't reset when quitting -- fixed



    le visual sugar: - COPIED (+ copy from game menu too) -- done
                     - ABORT game instead of restart -- done




    target mouse position doesn't update when not moving mouse --done


